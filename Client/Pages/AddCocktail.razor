@page "/addcocktail"
@using CocktailsIdeas.Shared
@inject HttpClient httpClient

<h3>Add a cocktail</h3>

<input @bind="cocktail.Name" @bind:event="oninput" placeholder="Cocktail's name" aria-label="Cocktail's name" />
<div>
    <h5>Ingredients</h5>
    <ul>
        @foreach (var ingredient in cocktail.Ingredients.Select((e, i) => new { Ingredient = e, Index = i }))
        {
            <li>
                <input value="@ingredient.Ingredient" @oninput="@(e => UpdateIngredient(e, ingredient.Index))"
                       placeholder="new ingredient" aria-label="new ingredient" />
            </li>
        }
    </ul>
</div>

<div>
    <button @onclick="AddNewCocktail" disabled="@isSubmitting">Add cocktail</button>
</div>

@code {
    private Cocktail cocktail = new Cocktail();
    private bool isSubmitting = false;

    protected override void OnInitialized()
    {
        cocktail.Ingredients.Add(string.Empty);
    }

    /*private bool IsCocktailValid()
    {
        return !string.IsNullOrWhiteSpace(cocktail.Name) && cocktail.Ingredients.Any() && cocktail.Steps.Any();
    }*/

    private async Task AddNewCocktail()
    {
        // todo: validation, see: https://docs.microsoft.com/en-us/aspnet/core/blazor/forms-validation?view=aspnetcore-5.0 (ModelState.AddModelError)

        isSubmitting = true;

        if (string.IsNullOrEmpty(cocktail.Ingredients[^1]))
        {
            cocktail.Ingredients.RemoveAt(cocktail.Ingredients.Count - 1);
        }

        var response = await httpClient.PostAsJsonAsync("cocktails", cocktail);
        if (response.IsSuccessStatusCode)
        {
            cocktail = new Cocktail();
            cocktail.Ingredients.Add(string.Empty);

            Console.WriteLine("IsSuccessStatusCode");
        }

        isSubmitting = false;
    }

    private void UpdateIngredient(ChangeEventArgs e, in int index)
    {
        var newIngredient = e?.Value?.ToString();

        if (string.IsNullOrEmpty(newIngredient) && cocktail.Ingredients.Count > 1)
        {
            cocktail.Ingredients.RemoveAt(index);
            return;
        }

        if (index == cocktail.Ingredients.Count - 1)
        {
            cocktail.Ingredients.Add(string.Empty);
        }

        cocktail.Ingredients[index] = newIngredient;
    }

}
