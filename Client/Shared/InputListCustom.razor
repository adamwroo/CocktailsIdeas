<div>
    <h5>@Title</h5>
    <ul>
        <li><button type="button" @onclick="AddEmptyElement">+</button></li>
        @foreach (var element in Elements.Select((e, i) => new {Element = e, Index = i}))
        {
            <li>
                <input value="@element.Element" @oninput="@(e => OnElementChanged(e, element.Index))"
                       placeholder="new @(Label)" aria-label="@(Label)"/>
                <button type="button" @onclick="@(() => RemoveElement(element.Index))">-</button>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Label { get; set; }
    [Parameter] public List<string> Elements { get; set; }
    [Parameter] public EditContext EditContext { get; set; }
    [Parameter] public string FieldName { get; set; }

    private void AddEmptyElement()
    {
        Elements.Add(string.Empty);
    }

    private void RemoveElement(in int index)
    {
        Elements.RemoveAt(index);
        NotifyFieldChanged();
    }

    private void OnElementChanged(ChangeEventArgs e, in int index)
    {
        Elements[index] =  e?.Value?.ToString();
        NotifyFieldChanged();
    }

    private void NotifyFieldChanged()
    {
        var fieldIdentifier = new FieldIdentifier(EditContext.Model, FieldName);
        EditContext.NotifyFieldChanged(fieldIdentifier);
    }

}
